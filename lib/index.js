"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.alwaysMockScan = exports.alwaysMockQuery = exports.alwaysMockBatchWrite = exports.alwaysMockBatchGet = exports.setMockOn = exports.mockTransactGet = exports.mockBatchWrite = exports.mockBatchGet = exports.mockScan = exports.mockQuery = exports.mockUpdate = exports.mockPut = exports.mockDelete = exports.multiMock = exports.Pipeline = void 0;
var Pipeline_1 = require("./Pipeline");
Object.defineProperty(exports, "Pipeline", { enumerable: true, get: function () { return Pipeline_1.Pipeline; } });
var testHelpers_1 = require("./testHelpers");
Object.defineProperty(exports, "multiMock", { enumerable: true, get: function () { return testHelpers_1.multiMock; } });
Object.defineProperty(exports, "mockDelete", { enumerable: true, get: function () { return testHelpers_1.mockDelete; } });
Object.defineProperty(exports, "mockPut", { enumerable: true, get: function () { return testHelpers_1.mockPut; } });
Object.defineProperty(exports, "mockUpdate", { enumerable: true, get: function () { return testHelpers_1.mockUpdate; } });
Object.defineProperty(exports, "mockQuery", { enumerable: true, get: function () { return testHelpers_1.mockQuery; } });
Object.defineProperty(exports, "mockScan", { enumerable: true, get: function () { return testHelpers_1.mockScan; } });
Object.defineProperty(exports, "mockBatchGet", { enumerable: true, get: function () { return testHelpers_1.mockBatchGet; } });
Object.defineProperty(exports, "mockBatchWrite", { enumerable: true, get: function () { return testHelpers_1.mockBatchWrite; } });
Object.defineProperty(exports, "mockTransactGet", { enumerable: true, get: function () { return testHelpers_1.mockTransactGet; } });
Object.defineProperty(exports, "setMockOn", { enumerable: true, get: function () { return testHelpers_1.setMockOn; } });
Object.defineProperty(exports, "alwaysMockBatchGet", { enumerable: true, get: function () { return testHelpers_1.alwaysMockBatchGet; } });
Object.defineProperty(exports, "alwaysMockBatchWrite", { enumerable: true, get: function () { return testHelpers_1.alwaysMockBatchWrite; } });
Object.defineProperty(exports, "alwaysMockQuery", { enumerable: true, get: function () { return testHelpers_1.alwaysMockQuery; } });
Object.defineProperty(exports, "alwaysMockScan", { enumerable: true, get: function () { return testHelpers_1.alwaysMockScan; } });
